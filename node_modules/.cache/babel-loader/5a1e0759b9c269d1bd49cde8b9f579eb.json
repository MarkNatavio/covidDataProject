{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project\\\\Code _Summer\\\\react\\\\covidDataProject\\\\src\\\\components\\\\DataT.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport SimpleCard from './SimpleCard';\nconst compArr = [];\nlet arr = [...Array(10)].map((_, i) => i);\nconst covidData = [0];\nlet count = 10;\nlet arrCount = 0;\nfetch('https://covidtracking.com/api/v1/us/daily.json').then(response => response.json()).then(data => {\n  data.forEach(i => {\n    if (count > 0) {\n      //console.log(\"This is one \", i);\n      covidData.push({\n        death: i.death,\n        hospitalized: i.hospitalized,\n        negative: i.negative,\n        positive: i.positive,\n        pending: i.pending\n      });\n    }\n  });\n}, arr = covidData);\n\nfor (let i = 0; i < 10; i++) {\n  console.log(covidData[i]);\n}\n\nconsole.log(covidData);\nconsole.log(arr); //console.log(arr)\n\n/*const listItems = covidData.map((data) =>\r\n        <Grid item xs={3}>\r\n          <SimpleCard death={data.death} positive={data.positve} pending={data.pending} hospitalizedCurrently= {data.hospitalized}/>\r\n        </Grid>\r\n    );*/\n\n/*const listItems = fetch('https://covidtracking.com/api/v1/us/daily.json')\r\n        .then(response => response.json())\r\n        .then((data) => {\r\n          data.forEach((i) =>{<Grid item xs={3}><SimpleCard death={i.death}/></Grid>}\r\n          );\r\n        })\r\n        */\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    height: 140\n  },\n  lpaper: {\n    padding: theme.spacing(20),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    height: 500\n  },\n  mpaper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    height: 200\n  },\n  footer: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    height: 75\n  }\n}));\n\nfunction DataT(props) {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.lpaper,\n    style: {\n      backgroundImage: 'url(https://source.unsplash.com/user/erondu/1600x900)',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Large space\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Results for \", props.stateVal)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Optional\")), arr.forEach(data => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SimpleCard, {\n    death: data.death,\n    positive: data.positve,\n    pending: data.pending,\n    hospitalizedCurrently: data.hospitalized,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleCard, {\n    death: arr[0].death,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, \"Footer\"))))));\n}\n\nexport default DataT;","map":{"version":3,"sources":["E:/Project/Code _Summer/react/covidDataProject/src/components/DataT.js"],"names":["React","makeStyles","Paper","Grid","CssBaseline","Button","Link","SimpleCard","compArr","arr","Array","map","_","i","covidData","count","arrCount","fetch","then","response","json","data","forEach","push","death","hospitalized","negative","positive","pending","console","log","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","height","lpaper","mpaper","footer","DataT","props","classes","backgroundImage","backgroundSize","backgroundRepeat","stateVal","positve"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport SimpleCard from './SimpleCard';\r\n\r\nconst compArr = []\r\nlet arr = [...Array(10)].map((_, i) => i );\r\nconst covidData =[0]\r\nlet count = 10;\r\nlet arrCount = 0;\r\nfetch('https://covidtracking.com/api/v1/us/daily.json')\r\n    .then(response => response.json())\r\n    .then((data) => {\r\n      data.forEach((i) => {\r\n        if(count > 0){\r\n        //console.log(\"This is one \", i);\r\n        covidData.push({\r\n          death: i.death,\r\n          hospitalized: i.hospitalized,\r\n          negative: i.negative,\r\n          positive: i.positive,\r\n          pending: i.pending\r\n        })\r\n\r\n\r\n        }\r\n      });\r\n    }, arr = covidData);\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      console.log(covidData[i])\r\n    }\r\n    console.log(covidData)\r\n    console.log(arr)\r\n    //console.log(arr)\r\n/*const listItems = covidData.map((data) =>\r\n        <Grid item xs={3}>\r\n          <SimpleCard death={data.death} positive={data.positve} pending={data.pending} hospitalizedCurrently= {data.hospitalized}/>\r\n        </Grid>\r\n    );*/\r\n  /*const listItems = fetch('https://covidtracking.com/api/v1/us/daily.json')\r\n          .then(response => response.json())\r\n          .then((data) => {\r\n            data.forEach((i) =>{<Grid item xs={3}><SimpleCard death={i.death}/></Grid>}\r\n            );\r\n          })\r\n          */\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height: 140,\r\n  },\r\n  lpaper: {\r\n    padding: theme.spacing(20),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height: 500,\r\n  },\r\n  mpaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height: 200,\r\n  },\r\n  footer: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    height: 75,\r\n  }\r\n}));\r\n\r\nfunction DataT(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <CssBaseline>\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {/* Main */}\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.lpaper}\r\n          style={{ backgroundImage: 'url(https://source.unsplash.com/user/erondu/1600x900)',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'no-repeat'}}>\r\n            Large space\r\n          </Paper>\r\n        </Grid>\r\n        {/* Grid With Cards or Paper */}\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            Results for {props.stateVal}\r\n          </Paper>\r\n        </Grid>\r\n        {/* Grid With Cards or Paper */}\r\n        <Grid item xs={6}>\r\n          <Paper className={classes.paper}>\r\n            Optional\r\n          </Paper>\r\n        </Grid>\r\n        {/* Grid With Cards or Paper */}\r\n        {arr.forEach((data) =>\r\n          <Grid item xs={3}>\r\n            <SimpleCard death={data.death} positive={data.positve} pending={data.pending} hospitalizedCurrently= {data.hospitalized}/>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={3}>\r\n            <SimpleCard death={arr[0].death}/>\r\n        </Grid>\r\n        {/* Footer */}\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.footer}>\r\n            Footer\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n    </CssBaseline>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default DataT;\r\n"]},"metadata":{},"sourceType":"module"}